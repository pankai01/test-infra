presets:
- labels:
    preset-common-gce-windows: "true"
  env:
  - name: KUBE_GCE_ENABLE_IP_ALIASES
    value: "true"
  - name: KUBERNETES_NODE_PLATFORM
    value: "windows"
  - name: KUBELET_TEST_ARGS
    value: "--feature-gates=KubeletPodResources=false"
- labels:
    preset-e2e-gce-windows: "true"
  env:
  - name: NUM_WINDOWS_NODES
    value: "3"
  - name: NUM_NODES
    value: "2"
- labels:
    preset-e2e-gce-windows-containerd: "true"
  env:
  - name: KUBE_CONTAINER_RUNTIME
    value: "containerd"
  - name: PREPULL_TIMEOUT
    value: "30m"
- labels:
    preset-load-gce-windows: "true"
  env:
  - name: MASTER_SIZE
    value: "n1-standard-4"
  - name: NUM_WINDOWS_NODES
    value: "1"
  - name: NUM_NODES
    value: "1"
  - name: NODE_SIZE
    value: "n1-standard-8"
  - name: NODE_DISK_SIZE
    value: "100GB"
  # Ensure good enough architecture for master machines.
  - name: MASTER_MIN_CPU_ARCHITECTURE
    value: "Intel Broadwell"
  - name: MAX_PODS_PER_NODE
    value: "128"
  - name: PREPULL_TIMEOUT
    value: "10m"
  # APIResponsiveness test depends on Prometheus server which couldn't scrape kube-proxy,
  # unless itâ€™s binding 0.0.0.0 as per https://github.com/helm/charts/issues/16476
  # Reference: https://github.com/kubernetes/test-infra/blob/master/config/jobs/kubernetes/sig-scalability/sig-scalability-presets.yaml#L127
  - name: KUBEPROXY_TEST_ARGS
    value: "--profiling --metrics-bind-address=0.0.0.0"

periodics:
- name: ci-kubernetes-e2e-windows-gce-poc
  decorate: true
  extra_refs:
  - org: pjh
    repo: kubernetes
    base_ref: windows-gce-poc
    path_alias: k8s.io/kubernetes
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
  - org: kubernetes
    repo: release
    base_ref: master
    path_alias: k8s.io/release
  interval: 2h
  labels:
    preset-k8s-ssh: "true"
    preset-common-gce-windows: "true"
    preset-e2e-gce-windows: "true"
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --cluster=
      - --build=bazel
      - --stage=gs://kubernetes-release-dev/ci/ci-kubernetes-e2e-windows-gce-poc
      - --extract=local
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=8
      - --provider=gce
      - --gcp-nodes=2
      - --test=false
      - --test-cmd=$GOPATH/src/k8s.io/windows-testing/gce/run-e2e.sh
      - --test-cmd-args=--ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\] --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Feature:.+\] --minStartupPods=8
      - --test-cmd-args=--node-os-distro=windows
      - --timeout=120m
      env:
      - name: WINDOWS_NODE_OS_DISTRIBUTION
        value: "win1909"
      - name: PREPULL_YAML
        value: "prepull-head.yaml"
      - name: OVERRIDE_NODE_BINARY_TAR_URL
        value: "https://storage.googleapis.com/kubernetes-release/release/v1.17.2/kubernetes-node-windows-amd64.tar.gz"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20200326-e946722-master
      resources:
        requests:
          memory: "8Gi"
  annotations:
    testgrid-dashboards: google-windows
    testgrid-tab-name: windows-prototype

- name: ci-kubernetes-e2e-windows-gce-2019
  decorate: true
  extra_refs:
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
  interval: 2h
  labels:
    preset-k8s-ssh: "true"
    preset-service-account: "true"
    preset-common-gce-windows: "true"
    preset-e2e-gce-windows: "true"
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --cluster=
      - --extract=ci/k8s-master
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=8
      - --provider=gce
      - --gcp-nodes=2
      - --test=false
      - --test-cmd=$GOPATH/src/k8s.io/windows-testing/gce/run-e2e.sh
      - --test-cmd-args=--ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\] --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Feature:.+\] --minStartupPods=8
      - --test-cmd-args=--node-os-distro=windows
      - --timeout=120m
      env:
      - name: WINDOWS_NODE_OS_DISTRIBUTION
        value: "win2019"
      - name: PREPULL_YAML
        value: "prepull-head.yaml"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20200326-e946722-master
  annotations:
    fork-per-release: "true"
    fork-per-release-replacements: "--extract=ci/k8s-master -> --extract=ci/k8s-beta"
    testgrid-dashboards: google-windows, sig-windows, sig-release-master-informing
    testgrid-tab-name: gce-windows-2019-master
    description: Runs tests on a Kubernetes cluster with Windows 2019 nodes on GCE

- name: ci-kubernetes-e2e-windows-gce-1909
  decorate: true
  extra_refs:
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
  interval: 2h
  labels:
    preset-k8s-ssh: "true"
    preset-service-account: "true"
    preset-common-gce-windows: "true"
    preset-e2e-gce-windows: "true"
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --cluster=
      - --extract=ci/k8s-master
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=8
      - --provider=gce
      - --gcp-nodes=2
      - --test=false
      - --test-cmd=$GOPATH/src/k8s.io/windows-testing/gce/run-e2e.sh
      - --test-cmd-args=--ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\] --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Feature:.+\] --minStartupPods=8
      - --test-cmd-args=--node-os-distro=windows
      - --timeout=120m
      env:
      - name: WINDOWS_NODE_OS_DISTRIBUTION
        value: "win1909"
      - name: PREPULL_YAML
        value: "prepull-head.yaml"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20200326-e946722-master
  annotations:
    fork-per-release: "true"
    fork-per-release-replacements: "--extract=ci/k8s-master -> --extract=ci/k8s-beta"
    testgrid-dashboards: google-windows, sig-windows, sig-release-master-informing
    testgrid-tab-name: gce-windows-1909-master
    description: Runs tests on a Kubernetes cluster with Windows 1909 nodes on GCE

- name: ci-kubernetes-e2e-windows-gce-alpha-features
  decorate: true
  extra_refs:
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
  interval: 2h
  labels:
    preset-k8s-ssh: "true"
    preset-service-account: "true"
    preset-common-gce-windows: "true"
    preset-e2e-gce-windows: "true"
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --cluster=
      - --extract=ci/k8s-master
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=8
      - --provider=gce
      - --gcp-nodes=2
      - --test=false
      - --test-cmd=$GOPATH/src/k8s.io/windows-testing/gce/run-e2e.sh
      - --test-cmd-args=--ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\] --ginkgo.skip=\[LinuxOnly\]|\[Serial\] --minStartupPods=8
      - --test-cmd-args=--node-os-distro=windows
      - --timeout=120m
      env:
      - name: WINDOWS_NODE_OS_DISTRIBUTION
        value: "win2019"
      - name: PREPULL_YAML
        value: "prepull-head.yaml"
      - name: KUBE_FEATURE_GATES
        value: "WindowsGMSA=true"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20200326-e946722-master
  annotations:
    testgrid-dashboards: google-windows, sig-windows
    testgrid-tab-name: gce-windows-2019-master-alpha-features
    description: Runs tests on a Kubernetes cluster with Windows nodes on GCE and alpha features enabled

- name: ci-kubernetes-e2e-windows-gce-serial
  decorate: true
  decoration_config:
    timeout: 6h
  extra_refs:
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
  interval: 6h
  labels:
    preset-k8s-ssh: "true"
    preset-service-account: "true"
    preset-common-gce-windows: "true"
    preset-e2e-gce-windows: "true"
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --cluster=
      - --extract=ci/k8s-master
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=1
      - --provider=gce
      - --gcp-nodes=2
      - --test=false
      - --test-cmd=$GOPATH/src/k8s.io/windows-testing/gce/run-e2e.sh
      - --test-cmd-args=--ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[Feature:Windows\]|DaemonRestart --ginkgo.skip=\[Flaky\]|\[LinuxOnly\] --minStartupPods=8
      - --test-cmd-args=--node-os-distro=windows
      - --timeout=350m
      env:
      - name: WINDOWS_NODE_OS_DISTRIBUTION
        value: "win2019"
      - name: PREPULL_YAML
        value: "prepull-head.yaml"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20200326-e946722-master
  annotations:
    testgrid-dashboards: google-windows
    testgrid-tab-name: gce-windows-2019-serial

- name: ci-kubernetes-e2e-windows-containerd-gce
  decorate: true
  decoration_config:
    timeout: 4h
  extra_refs:
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
  interval: 4h
  labels:
    preset-k8s-ssh: "true"
    preset-service-account: "true"
    preset-common-gce-windows: "true"
    preset-e2e-gce-windows: "true"
    preset-e2e-gce-windows-containerd: "true"
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --cluster=
      - --extract=ci/k8s-master
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=8
      - --provider=gce
      - --gcp-nodes=2
      - --test=false
      - --test-cmd=$GOPATH/src/k8s.io/windows-testing/gce/run-e2e.sh
      - --test-cmd-args=--ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\] --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Feature:.+\] --minStartupPods=8
      - --test-cmd-args=--node-os-distro=windows
      - --timeout=230m
      env:
      - name: WINDOWS_NODE_OS_DISTRIBUTION
        value: "win2019"
      - name: PREPULL_YAML
        value: "prepull-head.yaml"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20200326-e946722-master
  annotations:
    testgrid-dashboards: google-windows, sig-windows, sig-node-containerd
    testgrid-tab-name: gce-windows-2019-containerd-master
    description: Runs tests on a Kubernetes cluster with Windows containerd nodes on GCE

- name: ci-kubernetes-e2e-windows-containerd-gce-1-18
  decorate: true
  decoration_config:
    timeout: 4h0m0s
  extra_refs:
  - base_ref: master
    org: kubernetes-sigs
    path_alias: k8s.io/windows-testing
    repo: windows-testing
  interval: 4h
  labels:
    preset-common-gce-windows: "true"
    preset-e2e-gce-windows: "true"
    preset-e2e-gce-windows-containerd: "true"
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  spec:
    containers:
    - args:
      - --check-leaked-resources
      - --cluster=
      - --extract=ci/k8s-beta
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=8
      - --provider=gce
      - --gcp-nodes=2
      - --test=false
      - --test-cmd=$GOPATH/src/k8s.io/windows-testing/gce/run-e2e.sh
      - --test-cmd-args=--ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]
        --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Feature:.+\] --minStartupPods=8
      - --test-cmd-args=--node-os-distro=windows
      - --timeout=230m
      command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      env:
      - name: WINDOWS_NODE_OS_DISTRIBUTION
        value: win2019
      - name: PREPULL_YAML
        value: prepull-head.yaml
      image: gcr.io/k8s-testimages/kubekins-e2e:v20200326-e946722-1.18
      name: ""
      resources: {}
  annotations:
    testgrid-dashboards: google-windows, sig-windows, sig-node-containerd
    testgrid-tab-name: gce-windows-2019-containerd-1.18

- name: ci-kubernetes-e2e-windows-node-throughput
  interval: 6h
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
    preset-common-gce-windows: "true"
    preset-load-gce-windows: "true"
  annotations:
    testgrid-dashboards: google-windows
    testgrid-tab-name: gce-windows-node-throughput
  decorate: true
  decoration_config:
    timeout: 4h
  extra_refs:
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
  - org: kubernetes
    repo: perf-tests
    base_ref: master
    path_alias: k8s.io/perf-tests
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      image: gcr.io/k8s-testimages/kubekins-e2e:v20200326-e946722-master
      args:
      - --check-leaked-resources
      - --cluster=
      - --extract=ci/k8s-master
      - --gcp-zone=us-west1-b
      - --provider=gce
      - --gcp-nodes=1
      - --test=false
      - --test-cmd=$GOPATH/src/k8s.io/windows-testing/gce/load-test.sh
      - --test-cmd-args=cluster-loader2
      - --test-cmd-args=--nodes=1
      - --test-cmd-args=--provider=gce
      - --test-cmd-args=--report-dir=/logs/artifacts
      - --test-cmd-args=--enable-prometheus-server=true
      - --test-cmd-args=--testconfig=testing/node-throughput/config.yaml
      - --test-cmd-args=--testoverrides=./testing/node-throughput/windows_override.yaml
      - --test-cmd-name=ClusterLoaderV2
      - --timeout=300m

presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-windows-gce
    decorate: true
    decoration_config:
      timeout: 200m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes-sigs
      repo: windows-testing
      base_ref: master
      path_alias: k8s.io/windows-testing
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
      preset-common-gce-windows: "true"
      preset-e2e-gce-windows: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    always_run: false
    optional: true
    branches:
    - master
    spec:
      containers:
      - command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=release
        - --check-leaked-resources
        - --cluster=
        - --extract=local
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=8
        - --provider=gce
        - --gcp-nodes=2
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-windows-gce
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/windows-testing/gce/run-e2e.sh
        - --test-cmd-args=--ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\] --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Feature:.+\] --minStartupPods=8
        - --test-cmd-args=--node-os-distro=windows
        - --timeout=150m
        env:
        - name: WINDOWS_NODE_OS_DISTRIBUTION
          value: "win2019"
        - name: PREPULL_YAML
          value: "prepull-head.yaml"
        image: gcr.io/k8s-testimages/kubekins-e2e:v20200326-e946722-master
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    annotations:
      testgrid-dashboards: google-windows
      testgrid-tab-name: pull-windows-gce
